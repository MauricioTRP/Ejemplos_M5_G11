/**
 * Se crear√° una clase Poligono general
 * con propiedad p√∫blica this.lado
 * 
 * y se crear√° una clase hija PoligonoRegular
 * con propiedad p√∫blica this.lado, heredada
 * y un m√©todo para calcular su √°rea
 */
function Poligono(cantidad_lados) {
  this.cantidad_lados = cantidad_lados
}

// M√©todo de superclass (afecta a toda la familia)
Poligono.prototype.calcularArea = function() {
  return '¬øC√≥mo voy a calcular el √°rea de √©ste bicho?, ayuda Zen√≥n üíÄ'
}

function PoligonoRegular(lado, cantidad_lados) {
  Poligono.call(this, cantidad_lados)
  this.lado = lado
}


// Se define que PoligonoRegular hereda de Poligono, indicando que tienen sistemas protot√≠picos encadenados familiares
PoligonoRegular.prototype = Object.create(Poligono.prototype)
// Se define quien es el constructor del Pol√≠gono regular, ya que
// En el paso anterior, se sobreescribi√≥ la propiedad
PoligonoRegular.prototype.constructor = PoligonoRegular

// M√©todo de superclass PoligonoRegular

// Comenta y descomenta este m√©todo, y analiza en el navegador c√≥mo cambia el comportamiento del hex√°gono
PoligonoRegular.prototype.calcularArea = function() {
  return this.cantidad_lados * Math.pow(this.lado, 2) * (1 / Math.tan(Math.PI / this.cantidad_lados)) / 4
}

let pentagono = new PoligonoRegular(5, 5)

